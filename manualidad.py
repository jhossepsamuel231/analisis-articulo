import numpy as np
from scipy import stats
from scipy.stats import t
import matplotlib.pyplot as plt

asis = [9.13, 6.53, 8.76, 8.41, 8.20, 9.00, 8.60, 10.84, 6.67, 6.60, 7.98, 7.21, 7.79, 
        6.30, 6.72, 6.82, 9.44, 10.70, 8.34, 10.33, 9.51, 9.79, 9.50, 7.90, 9.45, 7.14, 
        8.56, 10.45, 10.28, 6.34, 8.40, 9.22, 9.79, 9.17, 7.52, 10.70, 9.48, 6.41, 10.36, 
        7.61, 10.91, 8.04, 8.08, 8.37, 6.61, 7.71, 10.81, 8.95, 9.04, 6.47, 8.18, 6.01, 
        10.40, 8.59, 6.35, 6.28, 10.06, 7.87, 8.27, 8.08, 9.99, 6.41, 10.26, 10.41, 6.89, 
        7.19, 7.68, 6.41, 9.39, 10.24, 9.58, 7.73, 9.60, 10.62, 7.92, 6.14, 7.26, 7.17, 
        7.29, 9.38, 10.63, 8.64, 7.95, 6.73, 6.91, 6.41, 10.60, 8.70, 10.20, 6.54, 8.94, 
        8.32, 8.30, 7.43, 6.94, 9.56, 9.81, 6.51, 7.97, 6.39, 8.82, 9.11, 7.79, 10.31, 9.85, 
        10.90, 6.86, 8.47, 9.01, 8.41, 8.50, 10.33, 10.12, 6.13, 8.27, 10.27, 9.09, 9.43, 
        8.72, 8.58, 9.97, 10.63, 6.10, 6.44, 9.51, 7.56, 8.02, 10.92, 8.18, 9.02, 9.66, 6.80, 
        6.15, 10.40, 10.33, 6.98, 9.34, 7.71, 6.11, 6.35, 7.37, 10.75, 9.01, 6.06, 8.02, 8.93, 
        7.99, 6.52, 9.21, 9.90, 10.88, 9.49, 6.28, 10.57, 9.44, 9.43, 9.49, 7.80, 10.79, 6.90, 
        7.84, 6.71, 7.29, 6.93, 7.14, 6.31, 6.29, 7.57, 10.16, 10.15, 9.85, 10.27, 9.72, 7.12, 
        6.30, 10.32, 7.67, 9.13, 10.30, 7.45, 6.59, 8.21, 6.20, 6.61, 8.86, 8.80, 10.11, 6.58, 
        9.53, 9.85, 8.59, 8.54, 9.66, 10.74, 8.88, 7.61, 10.38, 6.02, 6.42, 6.87]

tobe = [8.10, 6.26, 6.82, 6.11, 6.93, 6.08, 6.71, 8.49, 6.08, 8.27, 6.62, 8.69, 6.49, 8.14, 
        6.77, 6.20, 6.62, 8.30, 6.94, 8.25, 8.56, 8.45, 8.85, 8.70, 7.84, 6.39, 8.62, 7.49, 
        8.97, 7.10, 7.66, 7.27, 8.94, 7.24, 8.28, 8.42, 7.52, 7.79, 6.15, 8.72, 8.32, 7.13, 
        7.28, 7.62, 8.40, 8.29, 6.09, 6.83, 8.75, 7.79, 8.96, 7.17, 8.77, 7.62, 8.22, 7.98, 
        6.84, 7.12, 8.46, 7.60, 6.21, 6.16, 8.30, 6.61, 6.97, 7.28, 8.66, 6.96, 6.73, 6.62, 
        7.89, 7.30, 6.76, 6.71, 6.43, 6.40, 6.06, 8.32, 6.94, 6.51, 8.52, 7.74, 7.70, 7.85, 
        8.89, 7.23, 7.48, 7.88, 8.06, 8.17, 6.28, 8.59, 8.79, 6.32, 7.32, 6.28, 8.53, 7.43, 
        7.64, 7.83, 6.92, 7.50, 8.85, 8.43, 6.20, 7.76, 6.96, 8.61, 6.64, 7.29, 7.18, 7.08, 
        6.58, 6.01, 8.68, 7.45, 6.87, 8.13, 8.80, 7.32, 7.55, 6.39, 6.85, 6.60, 7.78, 6.61, 
        8.81, 7.24, 8.08, 7.78, 6.34, 6.66, 8.81, 7.72, 8.73, 8.20, 8.66, 6.41, 6.25, 6.53, 
        8.87, 8.85, 6.11, 6.38, 6.01, 7.48, 6.97, 6.02, 8.88, 8.28, 7.41, 6.85, 6.39, 6.65, 
        8.00, 8.89, 8.74, 8.48, 8.45, 7.25, 6.02, 7.82, 8.52, 8.97, 6.86, 7.72, 6.48, 7.01, 
        7.40, 6.68, 7.79, 6.61, 7.55, 7.19, 8.35, 6.84, 7.27, 8.56, 8.73, 7.25, 7.65, 7.38, 
        6.18, 8.53, 8.43, 7.54, 6.04, 7.59, 8.63, 6.88, 6.90, 7.92, 8.72, 6.39, 7.87, 6.43, 
        8.59, 8.80, 8.89, 6.97]

promedio_asis = np.mean(asis)
promedio_tobe = np.mean(tobe)

print("------------------------------------------------------------------------------")
print("Tiempo promedio de búsqueda As-Is: ", promedio_asis)
print("Tiempo promedio de búsqueda To-Be: ", promedio_tobe)

# Realizar la prueba de hipótesis
t_stat, p_value = stats.ttest_ind(asis, tobe, equal_var=False)

print("Valor t calculado: ", t_stat)
print("Valor p:", p_value)

alpha = 0.05

# Calcular los grados de libertad
n1 = len(asis)
n2 = len(tobe)
df = n1 + n2 - 2

# Calcular el valor crítico de t
t_critical = t.ppf(1 - alpha/2, df)

print("valor critio Tc: ", t_critical)

if p_value < alpha:
    print("Se rechaza la hipótesis nula. Hay evidencia suficiente para decir que el tiempo promedio de búsqueda de trabajo en manualidades ha disminuido significativamente.")
else:
    print("No se puede rechazar la hipótesis nula. No hay suficiente evidencia para afirmar que el tiempo promedio de búsqueda de trabajo en manualidades ha disminuido significativamente.")

print("------------------------------------------------------------------------------")