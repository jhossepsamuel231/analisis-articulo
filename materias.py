import numpy as np
from scipy import stats
from scipy.stats import t
import matplotlib.pyplot as plt

asis = [11.63, 11.84, 11.28, 7.20, 9.43, 9.63, 11.40, 6.41, 9.77, 6.73, 11.05, 
        5.25, 8.10, 10.07, 6.92, 10.63, 8.08, 12.69, 11.42, 7.90, 6.15, 10.32, 
        11.21, 11.06, 11.54, 12.19, 7.53, 7.26, 5.60, 5.75, 12.97, 5.02, 8.93, 
        6.56, 6.69, 11.34, 5.64, 12.90, 7.62, 7.56, 5.00, 5.56, 10.83, 9.01, 5.69, 
        9.60, 6.89, 8.95, 9.83, 7.65, 7.77, 10.76, 10.03, 7.75, 12.08, 9.96, 
        5.14, 5.56, 10.45, 10.36, 8.27, 8.34, 12.15, 9.21, 12.65, 11.98, 11.82, 
        10.26, 8.21, 8.71, 10.81, 5.85, 12.32, 9.73, 9.13, 10.76, 6.50, 7.71, 6.76, 
        9.46, 11.88, 6.34, 9.61, 11.84, 6.61, 5.46, 5.23, 5.97, 5.26, 10.96, 9.61, 
        7.05, 7.31, 7.79, 9.09, 11.77, 7.93, 10.98, 8.27, 8.48, 6.06, 6.39, 9.10, 
        11.41, 8.61, 9.97, 10.16, 9.65, 8.73, 7.27, 7.99, 6.95, 7.58, 9.49, 6.89, 
        8.91, 10.94, 12.95, 6.23, 6.38, 9.21, 12.93, 8.37, 9.78, 10.57, 6.44, 6.60, 
        9.81, 7.31, 11.44, 7.57, 5.49, 11.61, 5.20, 5.72, 6.85, 5.68, 11.26, 9.29, 
        5.58, 9.35, 5.65, 6.72, 7.53, 10.53, 11.73, 7.61, 6.65, 7.57, 9.90, 6.23, 
        5.03, 12.98, 11.63, 12.87, 7.40, 7.01, 8.46, 12.98, 5.01, 7.87, 10.24, 11.52, 
        10.75, 9.35, 12.67, 8.69, 7.73, 7.54, 10.55, 7.93, 5.28, 11.66, 8.75, 8.46, 
        9.74, 7.60, 5.64, 6.55, 6.34, 7.88, 5.75, 12.18, 10.55, 12.53, 7.04, 9.81, 
        12.31, 6.63, 8.52, 8.65, 5.56, 9.71, 11.55, 5.07, 9.60, 12.97, 11.44, 9.96, 8.53]
tobe = [8.24, 5.94, 6.17, 6.90, 7.41, 7.37, 7.00, 5.87, 7.55, 6.26, 7.45, 5.57, 6.85, 
        7.97, 8.14, 8.89, 8.28, 8.76, 7.07, 6.82, 6.29, 5.04, 6.77, 6.23, 5.19, 7.86, 
        7.20, 6.97, 6.21, 7.80, 6.05, 8.69, 7.49, 7.03, 5.61, 7.41, 7.78, 8.97, 8.69, 
        6.97, 8.76, 6.66, 6.39, 6.87, 5.93, 5.14, 7.41, 8.58, 7.04, 7.59, 7.27, 8.51, 
        8.64, 7.81, 8.19, 6.13, 5.79, 5.39, 5.58, 7.92, 8.25, 9.00, 7.59, 8.80, 6.45, 
        7.04, 7.66, 6.18, 7.04, 6.80, 8.98, 5.01, 6.55, 7.48, 8.14, 5.79, 6.91, 8.82, 
        5.51, 8.14, 6.04, 8.17, 7.12, 6.32, 5.13, 5.16, 5.81, 5.27, 7.60, 6.27, 6.77, 
        7.36, 5.79, 7.41, 7.59, 7.53, 5.15, 5.96, 7.25, 5.13, 5.86, 7.38, 7.85, 6.30, 
        5.12, 8.55, 7.04, 7.52, 7.52, 8.41, 7.02, 5.18, 6.07, 8.60, 5.89, 7.72, 8.37, 
        5.80, 5.02, 7.29, 7.65, 7.02, 8.83, 8.94, 7.09, 5.48, 8.49, 8.98, 8.04, 7.92, 
        6.63, 8.59, 5.28, 6.17, 7.26, 7.17, 6.74, 8.92, 8.46, 5.65, 5.56, 7.89, 8.73, 
        7.96, 5.14, 7.11, 7.36, 7.26, 6.48, 6.59, 5.89, 7.57, 5.18, 7.44, 6.57, 8.01, 
        7.41, 8.26, 5.83, 7.84, 6.10, 5.43, 5.60, 7.18, 6.91, 7.40, 8.12, 8.03, 8.31, 
        8.73, 6.72, 8.08, 7.00, 7.08, 7.51, 5.06, 7.22, 5.00, 8.54, 8.96, 8.79, 8.63, 
        6.12, 5.76, 5.25, 8.75, 6.50, 8.32, 6.05, 5.25, 6.57, 6.20, 8.10, 8.01, 8.56, 
        7.71, 7.13, 7.83, 7.70, 5.60]

promedio_asis = np.mean(asis)
promedio_tobe = np.mean(tobe)

print("------------------------------------------------------------------------------")
print("Tiempo promedio de búsqueda As-Is: ", promedio_asis)
print("Tiempo promedio de búsqueda To-Be: ", promedio_tobe)

# Realizar la prueba de hipótesis
t_stat, p_value = stats.ttest_ind(asis, tobe, equal_var=False)

print("Valor t calculado: ", t_stat)
print("Valor p:", p_value)

alpha = 0.05

# Calcular los grados de libertad
n1 = len(asis)
n2 = len(tobe)
df = n1 + n2 - 2

# Calcular el valor crítico de t
t_critical = t.ppf(1 - alpha/2, df)

print("valor critio Tc: ", t_critical)

if p_value < alpha:
    print("Se rechaza la hipótesis nula. Hay evidencia suficiente para decir que el tiempo promedio de búsqueda de trabajo en materias ha disminuido significativamente.")
else:
    print("No se puede rechazar la hipótesis nula. No hay suficiente evidencia para afirmar que el tiempo promedio de búsqueda de trabajo en materias ha disminuido significativamente.")

print("------------------------------------------------------------------------------")